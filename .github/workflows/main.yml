name: main

on: [push, pull_request]

jobs:

  php-cs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        name: Checkout repository

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          extensions: grpc
          php-version: '8.2'
          tools: phpstan, php-cs-fixer:3

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install
        uses: "ramsey/composer-install@v2"
        env:
          COMPOSER_AUTH: '{"github-oauth": {"github.com": "${{ secrets.COMPOSER_AUTH }}"}}'

      - name: Generate Library
        run: composer gen-lib

      - name: Run PHP CS Fixer
        run: php-cs-fixer fix --diff --dry-run

      - name: Run PHPStan
        run: phpstan

  test:
    runs-on: ${{ matrix.operating-system }}
    timeout-minutes: 10
    needs:
      - php-cs
    strategy:
      matrix:
        operating-system: [ ubuntu-latest ]
        php-versions: ['8.0', '8.1', '8.2']
        dependency-versions: ['lowest', 'locked']
        include:
          - operating-system: windows-latest
            php-versions: '8.0'
            dependency-versions: 'locked'
          - operating-system: macos-latest
            php-versions: '8.0'
            dependency-versions: 'locked'
    name: PHP ${{ matrix.php-versions }} on ${{ matrix.operating-system }} with ${{ matrix.dependency-versions }} versions of Composer dependencies
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          extensions: ffi, grpc, sockets
          php-version: ${{ matrix.php-versions }}
          coverage: pcov
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: ${{ matrix.dependency-versions }}
        env:
          COMPOSER_AUTH: '{"github-oauth": {"github.com": "${{ secrets.COMPOSER_AUTH }}"}}'

      - name: Install Roadrunner Binary
        run: composer install -d example/sync-message/provider

      - name: Generate Library
        run: composer gen-lib

      - name: Test & Generate Code Coverage
        run: composer test
        env:
          PACT_LOGLEVEL: ${{ vars.PACT_LOGLEVEL }}

      - name: Upload coverage results to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          composer global require php-coveralls/php-coveralls
          php-coveralls --coverage_clover=clover.xml -v
        if: matrix.php-versions == '8.2'
